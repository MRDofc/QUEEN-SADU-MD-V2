const { cmd } = require('../command');
const axios = require('axios');

// Translate Function using LibreTranslate
async function translate(text, from, to) {
    try {
        const res = await axios.post('https://libretranslate.de/translate', {
            q: text,
            source: from,
            target: to,
            format: "text"
        }, {
            headers: { 'Content-Type': 'application/json' }
        });
        return res.data.translatedText;
    } catch (err) {
        console.error("Translation error:", err);
        return null;
    }
}

// ‚îÄ‚îÄ‚îÄ .ai Command ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
cmd({
    pattern: "ai",
    alias: ["bot"],
    desc: "Chat with an AI model (supports Sinhala)",
    category: "ai",
    react: "ü§ñ",
    filename: __filename
}, async (conn, mek, m, { q, reply, react }) => {
    try {
        if (!q) return reply("‡∂ö‡∂ª‡∑î‡∂´‡∑è‡∂ö‡∂ª AI ‡∂ë‡∂ö‡∂ß ‡∂ö‡∑í‡∂∫‡∂±‡∑ä‡∂± ‡∑Ä‡∑í‡∂Ø‡∑í‡∂∫‡∂ö‡∑ä ‡∑É‡∂¥‡∂∫‡∂±‡∑ä‡∂±.\n‡∂ã‡∂Ø‡∑è‡∑Ñ‡∂ª‡∂´‡∂∫‡∂ö‡∑ä: `.ai ‡∑É‡∑î‡∂∑ ‡∂Ø‡∑Ä‡∑É‡∂ö‡∑ä`");

        const translatedInput = await translate(q, "si", "en");
        if (!translatedInput) return reply("‡∂¥‡∑ä‚Äç‡∂ª‡∑Å‡∑ä‡∂±‡∂∫ ‡∂¥‡∂ª‡∑í‡∑Ä‡∂ª‡∑ä‡∂≠‡∂±‡∂∫ ‡∂ö‡∑Ö ‡∂±‡∑ú‡∑Ñ‡∑ê‡∂ö.");

        const apiUrl = `https://lance-frank-asta.onrender.com/api/gpt?q=${encodeURIComponent(translatedInput)}`;
        const { data } = await axios.get(apiUrl);
        if (!data || !data.message) return reply("AI ‡∂¥‡∑í‡∑Ö‡∑í‡∂≠‡∑î‡∂ª ‡∂Ω‡∂∂‡∑è‡∂ú‡∂≠ ‡∂±‡∑ú‡∑Ñ‡∑ê‡∂ö.");

        const translatedOutput = await translate(data.message, "en", "si");
        if (!translatedOutput) return reply("‡∂¥‡∑í‡∑Ö‡∑í‡∂≠‡∑î‡∂ª ‡∂¥‡∂ª‡∑í‡∑Ä‡∂ª‡∑ä‡∂≠‡∂±‡∂∫ ‡∂ö‡∑Ö ‡∂±‡∑ú‡∑Ñ‡∑ê‡∂ö.");

        await reply(`ü§ñ *AI ‡∂¥‡∑í‡∑Ö‡∑í‡∂≠‡∑î‡∂ª:*\n\n${translatedOutput}`);
        await react("‚úÖ");

    } catch (e) {
        console.error("Error in AI command:", e);
        await react("‚ùå");
        reply("AI ‡∑É‡∂∏‡∑ä‡∂∂‡∂±‡∑ä‡∂∞‡∂≠‡∑è‡∑Ä‡∂∫ ‡∂Ø‡∑ù‡∑Ç‡∂∫‡∂ö‡∂ß ‡∂Ω‡∂ö‡∑ä‡∑Ä‡∑í‡∂∫‡∑í.");
    }
});

// ‚îÄ‚îÄ‚îÄ .openai Command ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
cmd({
    pattern: "openai",
    alias: ["chatgpt", "gpt3"],
    desc: "Chat with OpenAI (supports Sinhala)",
    category: "ai",
    react: "üß†",
    filename: __filename
}, async (conn, mek, m, { q, reply, react }) => {
    try {
        if (!q) return reply("OpenAI ‡∂ë‡∂ö‡∂ß ‡∑Ä‡∑í‡∂∞‡∑í‡∂∫‡∂ö‡∑ä ‡∑É‡∂¥‡∂∫‡∂±‡∑ä‡∂±.\n‡∂ã‡∂Ø‡∑è: `.openai ‡∂∏‡∑ú‡∂ö‡∂ö‡∑ä‡∂Ø ChatGPT ‡∂ö‡∑í‡∂∫‡∂±‡∑ä‡∂±‡∑ö?`");

        const translatedInput = await translate(q, "si", "en");
        if (!translatedInput) return reply("‡∂¥‡∑ä‚Äç‡∂ª‡∑Å‡∑ä‡∂±‡∂∫ ‡∂¥‡∂ª‡∑í‡∑Ä‡∂ª‡∑ä‡∂≠‡∂±‡∂∫ ‡∂ö‡∑Ö ‡∂±‡∑ú‡∑Ñ‡∑ê‡∂ö.");

        const apiUrl = `https://vapis.my.id/api/openai?q=${encodeURIComponent(translatedInput)}`;
        const { data } = await axios.get(apiUrl);
        if (!data || !data.result) return reply("OpenAI ‡∂¥‡∑í‡∑Ö‡∑í‡∂≠‡∑î‡∂ª ‡∂Ω‡∂∂‡∑è‡∂ú‡∂≠ ‡∂±‡∑ú‡∑Ñ‡∑ê‡∂ö.");

        const translatedOutput = await translate(data.result, "en", "si");
        if (!translatedOutput) return reply("‡∂¥‡∑í‡∑Ö‡∑í‡∂≠‡∑î‡∂ª ‡∂¥‡∂ª‡∑í‡∑Ä‡∂ª‡∑ä‡∂≠‡∂±‡∂∫ ‡∂ö‡∑Ö ‡∂±‡∑ú‡∑Ñ‡∑ê‡∂ö.");

        await reply(`üß† *OpenAI ‡∂¥‡∑í‡∑Ö‡∑í‡∂≠‡∑î‡∂ª:*\n\n${translatedOutput}`);
        await react("‚úÖ");

    } catch (e) {
        console.error("Error in OpenAI command:", e);
        await react("‚ùå");
        reply("OpenAI ‡∑É‡∂∏‡∑ä‡∂∂‡∂±‡∑ä‡∂∞‡∂≠‡∑è‡∑Ä‡∂∫‡∑ö ‡∂Ø‡∑ù‡∑Ç‡∂∫‡∂ö‡∑ä ‡∂á‡∂≠.");
    }
});

// ‚îÄ‚îÄ‚îÄ .deepseek Command ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
cmd({
    pattern: "deepseek",
    alias: ["deep", "seekai"],
    desc: "Chat with DeepSeek AI (supports Sinhala)",
    category: "ai",
    react: "üß†",
    filename: __filename
}, async (conn, mek, m, { q, reply, react }) => {
    try {
        if (!q) return reply("DeepSeek AI ‡∂ë‡∂ö‡∂ß ‡∂¥‡∑ä‚Äç‡∂ª‡∑Å‡∑ä‡∂±‡∂∫‡∂ö‡∑ä ‡∂Ω‡∂∂‡∑è‡∂Ø‡∑ô‡∂±‡∑ä‡∂±.\n‡∂ã‡∂Ø‡∑è: `.deepseek ‡∂ö‡∑ù‡∂¥‡∑í ‡∑Ä‡∂Ω ‡∑Ä‡∑è‡∑É‡∑í‡∂∫‡∂ö‡∑ä ‡∂≠‡∑í‡∂∫‡∑ô‡∂±‡∑Ä‡∂Ø?`");

        const translatedInput = await translate(q, "si", "en");
        if (!translatedInput) return reply("‡∂¥‡∑ä‚Äç‡∂ª‡∑Å‡∑ä‡∂±‡∂∫ ‡∂¥‡∂ª‡∑í‡∑Ä‡∂ª‡∑ä‡∂≠‡∂±‡∂∫ ‡∂ö‡∑Ö ‡∂±‡∑ú‡∑Ñ‡∑ê‡∂ö.");

        const apiUrl = `https://api.ryzendesu.vip/api/ai/deepseek?text=${encodeURIComponent(translatedInput)}`;
        const { data } = await axios.get(apiUrl);
        if (!data || !data.answer) return reply("DeepSeek AI ‡∂¥‡∑í‡∑Ö‡∑í‡∂≠‡∑î‡∂ª‡∂ö‡∑ä ‡∂±‡∑ú‡∂∏‡∑ê‡∂≠.");

        const translatedOutput = await translate(data.answer, "en", "si");
        if (!translatedOutput) return reply("‡∂¥‡∑í‡∑Ö‡∑í‡∂≠‡∑î‡∂ª ‡∂¥‡∂ª‡∑í‡∑Ä‡∂ª‡∑ä‡∂≠‡∂±‡∂∫ ‡∂ö‡∑Ö ‡∂±‡∑ú‡∑Ñ‡∑ê‡∂ö.");

        await reply(`üß† *DeepSeek ‡∂¥‡∑í‡∑Ö‡∑í‡∂≠‡∑î‡∂ª:*\n\n${translatedOutput}`);
        await react("‚úÖ");

    } catch (e) {
        console.error("Error in DeepSeek AI command:", e);
        await react("‚ùå");
        reply("DeepSeek AI ‡∑É‡∂∏‡∑ä‡∂∂‡∂±‡∑ä‡∂∞‡∂≠‡∑è‡∑Ä‡∂∫‡∑ö ‡∂Ø‡∑ù‡∑Ç‡∂∫‡∂ö‡∑ä ‡∂á‡∂≠.");
    }
});
