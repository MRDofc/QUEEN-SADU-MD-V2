const { cmd, commands } = require('../command'); // ‡∂î‡∂∂‡∂ú‡∑ö command system ‡∂ë‡∂ö‡∂ß ‡∂Ö‡∂±‡∑î‡∑Ä
const axios = require('axios'); // JSON data ‡∂Ω‡∂∂‡∑è ‡∂ú‡∑ê‡∂±‡∑ì‡∂∏‡∂ß

// ‡∂î‡∂∂‡∂ú‡∑ö JSON URLs ‡∂∏‡∑ô‡∑Ñ‡∑í ‡∑É‡∂≥‡∑Ñ‡∂±‡∑ä ‡∂ö‡∂ª‡∂±‡∑ä‡∂±
const AL_PAPER_DATA_URL = "https://raw.githubusercontent.com/MRDofc/mrd-ai-al-paper/main/json/al-papers.json";
const OL_PAPER_DATA_URL = "https://raw.githubusercontent.com/MRDofc/MRD-AI-paspaper/main/json/ol-papers.json";

// User state ‡∂ö‡∑Ö‡∂∏‡∂±‡∑è‡∂ö‡∂ª‡∂´‡∂∫ ‡∑É‡∂≥‡∑Ñ‡∑è Map ‡∂ë‡∂ö‡∂ö‡∑ä
// (‡∂∏‡∑ô‡∂∫ ‡∑É‡∂ª‡∂Ω ‡∂ö‡∑ä‚Äç‡∂ª‡∂∏‡∂∫‡∂ö‡∑í, ‡∑É‡∂Ç‡∂ö‡∑ì‡∂ª‡∑ä‡∂´ bot ‡∑Ä‡∂Ω‡∂ß Database ‡∂ë‡∂ö‡∂ö‡∑ä ‡∂∑‡∑è‡∑Ä‡∑í‡∂≠‡∑è ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏ ‡∑Ä‡∂©‡∑è ‡∑Ñ‡∑ú‡∂≥‡∂∫‡∑í)
const userStates = new Map(); // Stores { state: 'exam_type' | 'subject_select', examType: 'ol' | 'al' }

// ======================================================
// Main Command Handler: `!pp`
// ======================================================
cmd({
    pattern: "pp",
    react: "üìö",
    alias: ["pastpaper", "papp"],
    desc: "‡∂¥‡∑É‡∑î‡∂ú‡∑í‡∂∫ ‡∑Ä‡∑í‡∂∑‡∑è‡∂ú ‡∂¥‡∑ä‚Äç‡∂ª‡∑Å‡∑ä‡∂± ‡∂¥‡∂≠‡∑ä‚Äç‡∂ª (Past Papers) ‡∂Ω‡∂∂‡∑è ‡∂ú‡∂±‡∑ä‡∂±.",
    category: "main",
    filename: __filename
},
async (conn, mek, m, { from, reply, command }) => {
    const senderId = m.sender; // User ‡∂ú‡∑ö JID
    userStates.delete(senderId); // ‡∑É‡∑ë‡∂∏ ‡∑Ä‡∑í‡∂ß‡∂∏ ‡∂Ö‡∂Ω‡∑î‡∂≠‡∑ä ‡∑É‡∂Ç‡∑Ä‡∑è‡∂Ø‡∂∫‡∂ö‡∑ä ‡∂Ω‡∑ô‡∑É ‡∑É‡∂Ω‡∂ö‡∂∫‡∑í

    try {
        // ‡∂¥‡∑Ö‡∂∏‡∑î ‡∂∏‡∑ô‡∂±‡∑î‡∑Ä - ‡∑Ä‡∑í‡∂∑‡∑è‡∂ú ‡∑Ä‡∂ª‡∑ä‡∂ú‡∂∫ ‡∂≠‡∑ù‡∂ª‡∑è ‡∂ú‡∑ê‡∂±‡∑ì‡∂∏
        const sections = [
            {
                title: "‡∑Ä‡∑í‡∂∑‡∑è‡∂ú ‡∑Ä‡∂ª‡∑ä‡∂ú‡∂∫ ‡∂≠‡∑ù‡∂ª‡∂±‡∑ä‡∂±",
                rows: [
                    {
                        title: "‡∑É‡∑è‡∂∏‡∑è‡∂±‡∑ä‚Äç‡∂∫ ‡∂¥‡∑ô‡∑Ö (O/L)",
                        description: "‡∑É‡∑è‡∂∏‡∑è‡∂±‡∑ä‚Äç‡∂∫ ‡∂¥‡∑ô‡∑Ö ‡∑Ä‡∑í‡∂∑‡∑è‡∂ú ‡∂¥‡∑ä‚Äç‡∂ª‡∑Å‡∑ä‡∂± ‡∂¥‡∂≠‡∑ä‚Äç‡∂ª ‡∂Ω‡∂∂‡∑è ‡∂ú‡∂±‡∑ä‡∂±",
                        id: "pp_select_exam_ol" // Bot ‡∂ë‡∂ö‡∂ß ‡∑Ñ‡∂≥‡∑î‡∂±‡∑è‡∂ú‡∑ê‡∂±‡∑ì‡∂∏‡∂ß unique ID
                    },
                    {
                        title: "‡∂ã‡∑É‡∑É‡∑ä ‡∂¥‡∑ô‡∑Ö (A/L)",
                        description: "‡∂ã‡∑É‡∑É‡∑ä ‡∂¥‡∑ô‡∑Ö ‡∑Ä‡∑í‡∂∑‡∑è‡∂ú ‡∂¥‡∑ä‚Äç‡∂ª‡∑Å‡∑ä‡∂± ‡∂¥‡∂≠‡∑ä‚Äç‡∂ª ‡∂Ω‡∂∂‡∑è ‡∂ú‡∂±‡∑ä‡∂±",
                        id: "pp_select_exam_al"
                    }
                ]
            }
        ];

        const listMessage = {
            text: "*‡∂¥‡∑É‡∑î‡∂ú‡∑í‡∂∫ ‡∂¥‡∑ä‚Äç‡∂ª‡∑Å‡∑ä‡∂± ‡∂¥‡∂≠‡∑ä‚Äç‡∂ª (Past Papers)*",
            footer: "‡∂î‡∂∂‡∂ß ‡∂Ö‡∑Ä‡∑Å‡∑ä‚Äç‡∂∫ ‡∑Ä‡∑í‡∂∑‡∑è‡∂ú ‡∑Ä‡∂ª‡∑ä‡∂ú‡∂∫ ‡∂¥‡∑Ñ‡∂≠‡∑í‡∂±‡∑ä ‡∂≠‡∑ù‡∂ª‡∂±‡∑ä‡∂±.",
            title: "‡∑Ä‡∑í‡∂∑‡∑è‡∂ú ‡∂¥‡∑ä‚Äç‡∂ª‡∑Å‡∑ä‡∂± ‡∂¥‡∂≠‡∑ä‚Äç‡∂ª - ‡∂≠‡∑ö‡∂ª‡∑ì‡∂∏",
            buttonText: "‡∂∏‡∑ô‡∑Ñ‡∑í Click ‡∂ö‡∂ª‡∂±‡∑ä‡∂±", // ‡∂∏‡∑ô‡∂∏ ‡∂∂‡∑ú‡∂≠‡∑ä‡∂≠‡∂∏ ‡∂ö‡∑ä‡∂Ω‡∑í‡∂ö‡∑ä ‡∂ö‡∑Ö ‡∑Ä‡∑í‡∂ß ‡∂Ω‡∑ê‡∂∫‡∑í‡∑É‡∑ä‡∂≠‡∑î‡∑Ä ‡∂Ø‡∑í‡∑É‡∑ä‡∑Ä‡∑ö
            sections: sections
        };

        await conn.sendMessage(from, listMessage, { quoted: mek });
        // User ‡∂ú‡∑ö state ‡∂ë‡∂ö save ‡∂ö‡∂ª‡∂±‡∑ä‡∂±
        userStates.set(senderId, { state: 'exam_type_selected' }); 

    } catch (e) {
        console.error("Past Paper Plugin Error:", e);
        reply(`‡∂¥‡∑É‡∑î‡∂ú‡∑í‡∂∫ ‡∂¥‡∑ä‚Äç‡∂ª‡∑Å‡∑ä‡∂± ‡∂¥‡∂≠‡∑ä‚Äç‡∂ª ‡∂Ω‡∂∂‡∑è‡∂ú‡∑ê‡∂±‡∑ì‡∂∏‡∑ö‡∂Ø‡∑ì ‡∂Ø‡∑ù‡∑Ç‡∂∫‡∂ö‡∑ä ‡∑É‡∑í‡∂Ø‡∑î‡∑Ä‡∑í‡∂∫: ${e.message}`);
    }
});

// ======================================================
// List Message ‡∂≠‡∑ö‡∂ª‡∑ì‡∂∏‡∑ä ‡∑Ñ‡∑É‡∑î‡∂ª‡∑î‡∑Ä‡∂± Event Handler
// (‡∂∏‡∑ô‡∂∫ ‡∂î‡∂∂‡∂ú‡∑ö ‡∂¥‡∑ä‚Äç‡∂ª‡∂∞‡∑è‡∂± bot file - e.g., `sadi.js` ‡∑Ñ‡∑ù `index.js` - ‡∑Ñ‡∑í ‡∂≠‡∑í‡∂∂‡∑í‡∂∫ ‡∂∫‡∑î‡∂≠‡∑î‡∂∫‡∑í)
// ======================================================

// ‡∂∏‡∑ô‡∂∫ `commands` object ‡∂ë‡∂ö‡∑ö ‡∂ö‡∑ú‡∂ß‡∑É‡∂ö‡∑ä ‡∂±‡∑ú‡∑Ä‡∑ö.
// ‡∂∏‡∑ô‡∂∫ WhatsApp bot framework ‡∂ë‡∂ö‡∑ö `messages.upsert` event ‡∂ë‡∂ö listen ‡∂ö‡∂ª‡∂± ‡∂Ü‡∂ö‡∑è‡∂ª‡∂∫‡∂ß ‡∑É‡∂ö‡∑É‡∑ä ‡∂ö‡∑Ö ‡∂∫‡∑î‡∂≠‡∑î‡∂∫.
// ‡∂î‡∂∂‡∂ú‡∑ö bot library ‡∂ë‡∂ö ‡∂Ö‡∂±‡∑î‡∑Ä ‡∂∏‡∑ô‡∂∫ ‡∑Ä‡∑ô‡∂±‡∑É‡∑ä ‡∑Ä‡∑í‡∂∫ ‡∑Ñ‡∑ê‡∂ö.
// ‡∂ã‡∂Ø‡∑è‡∑Ñ‡∂ª‡∂´‡∂∫‡∂ö‡∑ä ‡∂Ω‡∑ô‡∑É: `conn.ev.on('messages.upsert', async chatUpdate => { ... });`

/*
    ‡∂¥‡∑Ñ‡∂≠ code ‡∂ö‡∑ú‡∂ß‡∑É copy ‡∂ö‡∂ª ‡∂î‡∂∂‡∂ú‡∑ö ‡∂¥‡∑ä‚Äç‡∂ª‡∂∞‡∑è‡∂± bot file ‡∂ë‡∂ö‡∑ö (‡∂î‡∂∂ `conn` object ‡∂ë‡∂ö define ‡∂ö‡∂ª ‡∂á‡∂≠‡∑í ‡∂≠‡∑ê‡∂±‡∂ß ‡∂Ü‡∑É‡∂±‡∑ä‡∂±‡∑Ä) paste ‡∂ö‡∂ª‡∂±‡∑ä‡∂±.
    ‡∑É‡∂ß‡∑Ñ‡∂±: ‡∂î‡∂∂‡∂ú‡∑ö bot library ‡∂ë‡∂ö `mek.message.listResponseMessage` ‡∑Ä‡∑ê‡∂±‡∑í ‡∂Ø‡∑ö‡∂ß support ‡∂ö‡∂ª‡∂±‡∑Ä‡∑è‡∂Ø ‡∂∫‡∂±‡∑ä‡∂± ‡∂¥‡∂ª‡∑ì‡∂ö‡∑ä‡∑Ç‡∑è ‡∂ö‡∂ª‡∂±‡∑ä‡∂±.
*/

// const userStates = new Map(); // ‡∂∏‡∑ô‡∂∏ map ‡∂ë‡∂ö ‡∂ú‡∑ù‡∂Ω‡∑ì‡∂∫‡∑Ä define ‡∂ö‡∂ª ‡∂á‡∂≠‡∑ä‡∂Ø‡∑ê‡∂∫‡∑í ‡∂≠‡∑Ñ‡∑Ä‡∑î‡∂ª‡∑î ‡∂ö‡∂ª‡∂±‡∑ä‡∂±

commands.addHandler(
    'listResponseMessage', // List message ‡∂≠‡∑ö‡∂ª‡∑ì‡∂∏‡∂ö‡∑ä ‡∂Ω‡∑ê‡∂∂‡∑î‡∂´‡∑î ‡∑Ä‡∑í‡∂ß trigger ‡∑Ä‡∑ì‡∂∏‡∂ß
    async (conn, mek, m, { from, reply }) => {
        const senderId = m.sender;
        const selectedRowId = mek.message.listResponseMessage.singleSelectReply.selectedRowId;
        const userState = userStates.get(senderId);

        try {
            // --- Step 1: ‡∑Ä‡∑í‡∂∑‡∑è‡∂ú ‡∑Ä‡∂ª‡∑ä‡∂ú‡∂∫ ‡∂≠‡∑ù‡∂ª‡∑è ‡∂ú‡∑ê‡∂±‡∑ì‡∂∏‡∑ô‡∂±‡∑ä ‡∂¥‡∑É‡∑î‡∑Ä ---
            if (selectedRowId === "pp_select_exam_ol") {
                await reply("‡∂î‡∂∂ ‡∑É‡∑è‡∂∏‡∑è‡∂±‡∑ä‚Äç‡∂∫ ‡∂¥‡∑ô‡∑Ö ‡∂≠‡∑ù‡∂ª‡∑è ‡∂ú‡∂≠‡∑ä‡∂≠‡∑è.");
                userStates.set(senderId, { state: 'subject_select', examType: 'ol' });
                await sendSubjectList(conn, from, 'ol');
            } else if (selectedRowId === "pp_select_exam_al") {
                await reply("‡∂î‡∂∂ ‡∂ã‡∑É‡∑É‡∑ä ‡∂¥‡∑ô‡∑Ö ‡∂≠‡∑ù‡∂ª‡∑è ‡∂ú‡∂≠‡∑ä‡∂≠‡∑è.");
                userStates.set(senderId, { state: 'subject_select', examType: 'al' });
                await sendSubjectList(conn, from, 'al');
            }
            // --- Step 2: ‡∑Ä‡∑í‡∑Ç‡∂∫‡∂∫‡∂ö‡∑ä ‡∂≠‡∑ù‡∂ª‡∑è ‡∂ú‡∑ê‡∂±‡∑ì‡∂∏‡∑ô‡∂±‡∑ä ‡∂¥‡∑É‡∑î‡∑Ä (PDF download) ---
            else if (selectedRowId.startsWith('pp_download_')) {
                const parts = selectedRowId.split('_'); // e.g., ["pp", "download", "ol", "subjectIndex"]
                const examType = parts[2];
                const subjectIndex = parseInt(parts[3]);

                const paperData = await fetchPaperData(examType); // ‡∂Ö‡∂Ø‡∑è‡∑Ö ‡∑Ä‡∑í‡∂∑‡∑è‡∂ú ‡∑Ä‡∂ª‡∑ä‡∂ú‡∂∫‡∑ö JSON data ‡∂Ω‡∂∂‡∑è ‡∂ú‡∂±‡∑ä‡∂±
                if (!paperData || !paperData[examType] || paperData[examType].length <= subjectIndex) {
                    userStates.delete(senderId);
                    return reply("‡∂ö‡∂´‡∂ú‡∑è‡∂ß‡∑î‡∂∫‡∑í, ‡∂≠‡∑ù‡∂ª‡∑è‡∂ú‡∂≠‡∑ä ‡∂¥‡∑ä‚Äç‡∂ª‡∑Å‡∑ä‡∂± ‡∂¥‡∂≠‡∑ä‚Äç‡∂ª‡∂∫ ‡∑É‡∑ú‡∂∫‡∑è‡∂ú‡∂≠ ‡∂±‡∑ú‡∑Ñ‡∑ê‡∂ö.");
                }

                const selectedSubject = paperData[examType][subjectIndex];

                if (selectedSubject.pdfUrl) {
                    await conn.sendMessage(from, { document: { url: selectedSubject.pdfUrl }, mimetype: 'application/pdf', fileName: `${selectedSubject.name}_${examType.toUpperCase()}_PastPaper.pdf` }, { quoted: mek });
                    await reply(`‡∂î‡∂∂ ‡∂≠‡∑ù‡∂ª‡∑è‡∂ú‡∂≠‡∑ä *${selectedSubject.name}* (${examType.toUpperCase()}) ‡∂¥‡∑ä‚Äç‡∂ª‡∑Å‡∑ä‡∂± ‡∂¥‡∂≠‡∑ä‚Äç‡∂ª‡∂∫ ‡∂¥‡∑Ñ‡∂≠‡∑í‡∂±‡∑ä.`);
                    userStates.delete(senderId); // ‡∑É‡∂Ç‡∑Ä‡∑è‡∂Ø‡∂∫ ‡∂Ö‡∑Ä‡∑É‡∂±‡∑ä, state reset ‡∂ö‡∂ª‡∂±‡∑ä‡∂±
                } else {
                    userStates.delete(senderId);
                    return reply("‡∂ö‡∂´‡∂ú‡∑è‡∂ß‡∑î‡∂∫‡∑í, ‡∂ë‡∂∏ ‡∑Ä‡∑í‡∑Ç‡∂∫ ‡∑É‡∂≥‡∑Ñ‡∑è PDF ‡∂Ω‡∑í‡∂¥‡∑í‡∂±‡∂∫‡∂ö‡∑ä ‡∑É‡∑ú‡∂∫‡∑è ‡∂ú‡∑ê‡∂±‡∑ì‡∂∏‡∂ß ‡∂±‡∑ú‡∑Ñ‡∑ê‡∂ö‡∑í ‡∑Ä‡∑í‡∂∫.");
                }
            } else {
                // ‡∂±‡∑ú‡∂Ø‡∂±‡∑ä‡∂±‡∑è ‡∂≠‡∑ö‡∂ª‡∑ì‡∂∏‡∂ö‡∑ä
                reply("‡∂ö‡∂ª‡∑î‡∂´‡∑è‡∂ö‡∂ª ‡∂±‡∑í‡∑Ä‡∑ê‡∂ª‡∂Ø‡∑í ‡∑Ä‡∑í‡∂ö‡∂Ω‡∑ä‡∂¥‡∂∫‡∂ö‡∑ä ‡∂≠‡∑ù‡∂ª‡∂±‡∑ä‡∂±.");
                userStates.delete(senderId); // reset state
            }
        } catch (e) {
            console.error("List Message Handler Error:", e);
            userStates.delete(senderId); // reset state on error
            reply(`‡∂ö‡∑ä‚Äç‡∂ª‡∑í‡∂∫‡∑è‡∑Ä‡∂Ω‡∑í‡∂∫ ‡∂Ö‡∑É‡∑è‡∂ª‡∑ä‡∂Æ‡∂ö ‡∑Ä‡∑í‡∂∫: ${e.message}`);
        }
    }
);


// ======================================================
// Helper Functions
// ======================================================

// ‡∂Ö‡∂Ø‡∑è‡∑Ö ‡∑Ä‡∑í‡∂∑‡∑è‡∂ú ‡∑Ä‡∂ª‡∑ä‡∂ú‡∂∫‡∑ö JSON data ‡∂Ω‡∂∂‡∑è ‡∂ú‡∂±‡∑ä‡∂±‡∑è function ‡∂ë‡∂ö
async function fetchPaperData(examType) {
    let url = '';
    if (examType === 'ol') {
        url = OL_PAPER_DATA_URL;
    } else if (examType === 'al') {
        url = AL_PAPER_DATA_URL;
    } else {
        return null;
    }

    try {
        const response = await axios.get(url);
        // JSON data ‡∂î‡∂∂‡∂ú‡∑ö GitHub repository ‡∑Ñ‡∑í 'al' ‡∑Ñ‡∑ù 'ol' key ‡∂ë‡∂ö‡∂ö‡∑ä ‡∂≠‡∑î‡∑Ö‡∂ß ‡∂Ø‡∂∏‡∑è ‡∂±‡∑ú‡∂∏‡∑ê‡∂≠‡∑í ‡∂±‡∑í‡∑É‡∑è,
        // ‡∑É‡∑ò‡∂¢‡∑î‡∑Ä‡∂∏ array ‡∂ë‡∂ö‡∂ö‡∑ä ‡∂Ω‡∑ô‡∑É ‡∂Ω‡∑ê‡∂∂‡∑ö‡∑Ä‡∑í.
        // ‡∂ë‡∂∂‡∑ê‡∑Ä‡∑í‡∂±‡∑ä, response.data ‡∂∫‡∂±‡∑î ‡∂ö‡∑ô‡∂Ω‡∑í‡∂±‡∑ä‡∂∏ array ‡∂ë‡∂ö‡∂ö‡∑ä ‡∂∂‡∑Ä‡∂ß ‡∂ã‡∂¥‡∂ö‡∂Ω‡∑ä‡∂¥‡∂±‡∂∫ ‡∂ö‡∂ª‡∂∏‡∑î.
        return { [examType]: response.data }; // `{ ol: [...] }` ‡∑Ñ‡∑ù `{ al: [...] }` ‡∂Ω‡∑ô‡∑É ‡∂Ü‡∂¥‡∑É‡∑î ‡∂∫‡∑Ä‡∂∏‡∑î.
    } catch (error) {
        console.error(`Error fetching ${examType} paper data from ${url}:`, error.message);
        return null;
    }
}

// ‡∑Ä‡∑í‡∑Ç‡∂∫ ‡∂Ω‡∑ê‡∂∫‡∑í‡∑É‡∑ä‡∂≠‡∑î‡∑Ä‡∂ö‡∑ä List Message ‡∂ë‡∂ö‡∂ö‡∑ä ‡∂Ω‡∑ô‡∑É ‡∂∫‡∑Ä‡∂± function ‡∂ë‡∂ö
async function sendSubjectList(conn, from, examType) {
    const paperData = await fetchPaperData(examType);
    if (!paperData || !paperData[examType] || paperData[examType].length === 0) {
        return conn.sendMessage(from, { text: `‡∂ö‡∂´‡∂ú‡∑è‡∂ß‡∑î‡∂∫‡∑í, ${examType.toUpperCase()} ‡∑É‡∂≥‡∑Ñ‡∑è ‡∂¥‡∑ä‚Äç‡∂ª‡∑Å‡∑ä‡∂± ‡∂¥‡∂≠‡∑ä‚Äç‡∂ª ‡∑É‡∑ú‡∂∫‡∑è ‡∂ú‡∑ê‡∂±‡∑ì‡∂∏‡∂ß ‡∂±‡∑ú‡∑Ñ‡∑ê‡∂ö‡∑í ‡∑Ä‡∑í‡∂∫.` });
    }

    const subjects = paperData[examType];
    const subjectSections = [{
        title: `${examType.toUpperCase()} ‡∑Ä‡∑í‡∑Ç‡∂∫‡∂±‡∑ä ‡∂≠‡∑ù‡∂ª‡∂±‡∑ä‡∂±`,
        rows: subjects.map((subject, index) => ({
            title: subject.Subject, // JSON ‡∂ë‡∂ö‡∑ö "Subject" ‡∂Ω‡∑ô‡∑É ‡∂á‡∂≠‡∑í ‡∂±‡∑í‡∑É‡∑è
            description: subject.Year ? `‡∑Ä‡∑É‡∂ª: ${subject.Year}` : `‡∂¥‡∑ä‚Äç‡∂ª‡∑Å‡∑ä‡∂± ‡∂¥‡∂≠‡∑ä‚Äç‡∂ª‡∂∫`, // Year ‡∂ë‡∂ö ‡∂≠‡∑í‡∂∂‡∑ö ‡∂±‡∂∏‡∑ä ‡∂¥‡∑ô‡∂±‡∑ä‡∑Ä‡∂±‡∑ä‡∂±
            id: `pp_download_${examType}_${index}` // PDF download ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏‡∂ß unique ID
        }))
    }];

    const subjectListMessage = {
        text: `‡∂î‡∂∂ *${examType.toUpperCase()}* ‡∂≠‡∑ù‡∂ª‡∑è ‡∂ú‡∂≠‡∑ä‡∂≠‡∑è. ‡∂Ø‡∑ê‡∂±‡∑ä ‡∂î‡∂∂‡∂ß ‡∂Ö‡∑Ä‡∑Å‡∑ä‚Äç‡∂∫ ‡∑Ä‡∑í‡∑Ç‡∂∫ ‡∂¥‡∑Ñ‡∂≠‡∑í‡∂±‡∑ä ‡∂≠‡∑ù‡∂ª‡∂±‡∑ä‡∂±.`,
        footer: `‡∂î‡∂∂‡∂ß ‡∂Ö‡∑Ä‡∑Å‡∑ä‚Äç‡∂∫ ‡∑Ä‡∑í‡∑Ç‡∂∫‡∂∫ ‡∂≠‡∑ù‡∂ª‡∂±‡∑ä‡∂±.`,
        title: `${examType.toUpperCase()} - ‡∑Ä‡∑í‡∑Ç‡∂∫ ‡∂≠‡∑ö‡∂ª‡∑ì‡∂∏`,
        buttonText: "‡∑Ä‡∑í‡∑Ç‡∂∫‡∂ö‡∑ä ‡∂≠‡∑ù‡∂ª‡∂±‡∑ä‡∂±",
        sections: subjectSections
    };

    await conn.sendMessage(from, subjectListMessage);
       }
